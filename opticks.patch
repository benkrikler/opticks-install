diff -r b8173314c622 cmake/Modules/EnvCompilationFlags.cmake
--- a/cmake/Modules/EnvCompilationFlags.cmake	Sun Nov 26 21:57:31 2017 +0800
+++ b/cmake/Modules/EnvCompilationFlags.cmake	Sun Nov 26 17:00:12 2017 +0000
@@ -24,8 +24,8 @@
   else ()
       #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
       #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++0x")
-     # set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")   #needed for numpyserver- on Linux ?
-     set(CMAKE_CXX_STANDARD 14)
+      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")   #needed for numpyserver- on Linux ?
+     #set(CMAKE_CXX_STANDARD 14)
      set(CMAKE_CXX_STANDARD_REQUIRED on)
 
   endif ()
diff -r b8173314c622 cmake/Modules/FindOptiX.cmake
--- a/cmake/Modules/FindOptiX.cmake	Sun Nov 26 21:57:31 2017 +0800
+++ b/cmake/Modules/FindOptiX.cmake	Sun Nov 26 17:00:12 2017 +0000
@@ -23,6 +23,7 @@
 
 # Our initial guess will be within the SDK.
 set(OptiX_INSTALL_DIR "${CMAKE_SOURCE_DIR}/../" CACHE PATH "Path to OptiX installed location.")
+message("BEK ${OptiX_INSTALL_DIR}")
 
 # The distribution contains both 32 and 64 bit libraries.  Adjust the library
 # search path based on the bit-ness of the build.  (i.e. 64: bin64, lib64; 32:
diff -r b8173314c622 externals/g4.bash
--- a/externals/g4.bash	Sun Nov 26 21:57:31 2017 +0800
+++ b/externals/g4.bash	Sun Nov 26 17:00:12 2017 +0000
@@ -175,12 +175,16 @@
 #g4-prefix(){  echo $(opticks-prefix)/externals ; }
 
 g4-prefix(){ 
+if [ -n "$OPTICKS_GEANT4_HOME" ];then
+	echo "$OPTICKS_GEANT4_HOME"
+else
     case $NODE_TAG in 
        MGB) echo $HOME/local/opticks/externals ;;
          D) echo /usr/local/opticks/externals ;;
          X) echo /opt/geant4 ;;
          *) echo ${LOCAL_BASE:-/usr/local}/opticks/externals ;;
     esac
+fi
  }
 
 g4-libsuffix(){ 
diff -r b8173314c622 externals/optix.bash
--- a/externals/optix.bash	Sun Nov 26 21:57:31 2017 +0800
+++ b/externals/optix.bash	Sun Nov 26 17:00:12 2017 +0000
@@ -3379,6 +3379,9 @@
 }
 
 optix-fold(){ 
+if [ -n "$OPTICKS_OPTIX_HOME" ];then
+	echo "$OPTICKS_OPTIX_HOME"
+else
    case $NODE_TAG in 
       D)  echo /Developer ;;
       G1) echo $(local-base) ;;
@@ -3386,6 +3389,7 @@
      GTL) echo /afs/ihep.ac.cn/soft/juno/JUNO-ALL-SLC6/GPU/20150723 ;;
       *) echo $(local-base) ;;
    esac
+fi
 }
 optix-prefix(){      echo $(optix-fold)/OptiX ; }
 optix-dir(){         echo $(optix-fold)/OptiX/SDK ; }
diff -r b8173314c622 opticks.bash
--- a/opticks.bash	Sun Nov 26 21:57:31 2017 +0800
+++ b/opticks.bash	Sun Nov 26 17:00:12 2017 +0000
@@ -239,22 +239,26 @@
 
 
 opticks-optix-install-dir(){ 
-    local t=$NODE_TAG
-    case $t in 
-       D_400) echo /Developer/OptiX_400 ;;
-       D) echo /Developer/OptiX_380 ;;
-    RYAN) echo /Developer/OptiX_380 ;;
-     GTL) echo ${MYENVTOP}/OptiX ;;
-    H5H2) echo ${MYENVTOP}/OptiX ;;
-       X) echo /usr/local/optix-3.8.0/NVIDIA-OptiX-SDK-3.8.0-linux64 ;;
-    #SDUGPU) echo /root/NVIDIA-OptiX-SDK-4.1.1-linux64 ;;
-    SDUGPU) echo /home/simon/NVIDIA-OptiX-SDK-4.1.1-linux64 ;;
-       *) echo /tmp ;;
-    esac
+echo /opt/Optix
+#   local t=$NODE_TAG
+#   case $t in 
+#      D_400) echo /Developer/OptiX_400 ;;
+#      D) echo /Developer/OptiX_380 ;;
+#   RYAN) echo /Developer/OptiX_380 ;;
+#    GTL) echo ${MYENVTOP}/OptiX ;;
+#   H5H2) echo ${MYENVTOP}/OptiX ;;
+#      X) echo /usr/local/optix-3.8.0/NVIDIA-OptiX-SDK-3.8.0-linux64 ;;
+#   #SDUGPU) echo /root/NVIDIA-OptiX-SDK-4.1.1-linux64 ;;
+#   SDUGPU) echo /home/simon/NVIDIA-OptiX-SDK-4.1.1-linux64 ;;
+#      *) echo /tmp ;;
+#   esac
 }
 
 
 opticks-compute-capability(){
+if [ -n "$OPTICKS_CAPABILITY" ] ; then
+	echo "$OPTICKS_CAPABILITY"
+else
     local t=$NODE_TAG
     case $t in 
        D) echo 30 ;;
@@ -265,6 +269,7 @@
   SDUGPU) echo 30 ;; 
        *) echo  0 ;;
     esac
+fi
 }
 
 opticks-externals(){ cat << EOL
diff -r b8173314c622 thrustrap/tests/issue628Test.cu
--- a/thrustrap/tests/issue628Test.cu	Sun Nov 26 21:57:31 2017 +0800
+++ b/thrustrap/tests/issue628Test.cu	Sun Nov 26 17:00:12 2017 +0000
@@ -4,6 +4,7 @@
 #include <thrust/device_vector.h>
 #include <thrust/reduce.h>
 #include <thrust/sequence.h>
+#include <thrust/iterator/discard_iterator.h>
 #include <iostream>
 
 int main(int argc, char ** argv)
