diff -r 659f02f409ac CMakeLists.txt
--- a/CMakeLists.txt	Sun Dec 17 16:54:21 2017 +0800
+++ b/CMakeLists.txt	Mon Feb 19 17:27:19 2018 +0000
@@ -30,6 +30,8 @@
 if(DUMP)
    # https://cmake.org/Wiki/CMake_Useful_Variables
    message("CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}")
+   message("CMAKE_C_COMPILER = ${CMAKE_C_COMPILER}")
+   message("CMAKE_CXX_COMPILER = ${CMAKE_CXX_COMPILER}")
    message("CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}")
    message("CMAKE_CXX_FLAGS_DEBUG = ${CMAKE_CXX_FLAGS_DEBUG}")
    message("CMAKE_CXX_FLAGS_RELEASE = ${CMAKE_CXX_FLAGS_RELEASE}")
diff -r 659f02f409ac analytic/gdml.py
--- a/analytic/gdml.py	Sun Dec 17 16:54:21 2017 +0800
+++ b/analytic/gdml.py	Mon Feb 19 17:27:19 2018 +0000
@@ -623,12 +623,12 @@
     def as_ncsg(self):
         assert self.lunit == 'mm' 
         cn = CSG("trapezoid", name=self.name)
-        planes, verts, bbox, meta = make_trapezoid(z=self.z, x1=self.x1, y1=self.y1, x2=self.x2, y2=self.y2 )
+        planes, verts, bbox, _csg = make_trapezoid(z=self.z, x1=self.x1, y1=self.y1, x2=self.x2, y2=self.y2 )
         cn.planes = planes
         cn.param2[:3] = bbox[0]
         cn.param3[:3] = bbox[1]
 
-        cn.meta.update(meta)
+        cn.meta.update(_csg.srcmeta)
 
         return cn
 
diff -r 659f02f409ac cfg4/OpNovicePhysicsList.cc
--- a/cfg4/OpNovicePhysicsList.cc	Sun Dec 17 16:54:21 2017 +0800
+++ b/cfg4/OpNovicePhysicsList.cc	Mon Feb 19 17:27:19 2018 +0000
@@ -63,6 +63,7 @@
 #include "Scintillation.hh"
 #include "Cerenkov.hh"
 
+#include <iostream>
 
 using CLHEP::g ; 
 using CLHEP::cm2 ; 
@@ -202,10 +203,10 @@
 #endif
  
   // loop over all particles in G4ParticleTable
-  theParticleIterator->reset();
-  while( (*theParticleIterator)() )
+  GetParticleIterator()->reset();
+  while( (*GetParticleIterator())() )
   {
-      G4ParticleDefinition* particle = theParticleIterator->value();
+      G4ParticleDefinition* particle = GetParticleIterator()->value();
       G4ProcessManager* pmanager = particle->GetProcessManager();
       // Add transportation process for all particles 
       assert( pmanager );
@@ -330,10 +331,10 @@
 
     //G4FastSimulationManagerProcess* fast_sim_man = new G4FastSimulationManagerProcess("fast_sim_man");
     
-    theParticleIterator->reset();
-    while( (*theParticleIterator)() ) {
+    GetParticleIterator()->reset();
+    while( (*GetParticleIterator())() ) {
 
-        G4ParticleDefinition* particle = theParticleIterator->value();
+        G4ParticleDefinition* particle = GetParticleIterator()->value();
         G4ProcessManager* pmanager = particle->GetProcessManager();
     
         // Caution: as of G4.9, Cerenkov becomes a Discrete Process.
@@ -410,9 +411,9 @@
       fScintillationProcess->AddSaturation(emSaturation);
   }
 
-  theParticleIterator->reset();
-  while( (*theParticleIterator)() ){
-    G4ParticleDefinition* particle = theParticleIterator->value();
+  GetParticleIterator()->reset();
+  while( (*GetParticleIterator())() ){
+    G4ParticleDefinition* particle = GetParticleIterator()->value();
     G4ProcessManager* pmanager = particle->GetProcessManager();
     G4String particleName = particle->GetParticleName();
     if (fCerenkovProcess && fCerenkovProcess->IsApplicable(*particle)) {
@@ -480,9 +481,9 @@
 {
   // Add Decay Process
   G4Decay* theDecayProcess = new G4Decay();
-  theParticleIterator->reset();
-  while( (*theParticleIterator)() ){
-    G4ParticleDefinition* particle = theParticleIterator->value();
+  GetParticleIterator()->reset();
+  while( (*GetParticleIterator())() ){
+    G4ParticleDefinition* particle = GetParticleIterator()->value();
     G4ProcessManager* pmanager = particle->GetProcessManager();
     if (theDecayProcess->IsApplicable(*particle)) {
       pmanager ->AddProcess(theDecayProcess);
@@ -518,9 +519,9 @@
 void OpNovicePhysicsList::Summary(const char* msg)
 {
     LOG(info) << msg ; 
-    theParticleIterator->reset();
-    while( (*theParticleIterator)() ){
-         G4ParticleDefinition* particle = theParticleIterator->value();
+    GetParticleIterator()->reset();
+    while( (*GetParticleIterator())() ){
+         G4ParticleDefinition* particle = GetParticleIterator()->value();
          G4String particleName = particle->GetParticleName();
 
          G4ProcessManager* pmanager = particle->GetProcessManager();
@@ -565,9 +566,9 @@
 
 void  OpNovicePhysicsList::setProcessVerbosity(int verbosity)
 {
-    theParticleIterator->reset();
-    while( (*theParticleIterator)() ){
-         G4ParticleDefinition* particle = theParticleIterator->value();
+    GetParticleIterator()->reset();
+    while( (*GetParticleIterator())() ){
+         G4ParticleDefinition* particle = GetParticleIterator()->value();
          G4String particleName = particle->GetParticleName();
          G4ProcessManager* pmanager = particle->GetProcessManager();
          if(!pmanager) continue ; 
@@ -593,9 +594,9 @@
 
 void OpNovicePhysicsList::collectProcesses()
 {
-    theParticleIterator->reset();
-    while( (*theParticleIterator)() ){
-         G4ParticleDefinition* particle = theParticleIterator->value();
+    GetParticleIterator()->reset();
+    while( (*GetParticleIterator())() ){
+         G4ParticleDefinition* particle = GetParticleIterator()->value();
          G4String particleName = particle->GetParticleName();
          G4ProcessManager* pmanager = particle->GetProcessManager();
          if(!pmanager) 
@@ -621,9 +622,9 @@
 
 void OpNovicePhysicsList::ConstructEM()
 {
-  theParticleIterator->reset();
-  while( (*theParticleIterator)() ){
-    G4ParticleDefinition* particle = theParticleIterator->value();
+  GetParticleIterator()->reset();
+  while( (*GetParticleIterator())() ){
+    G4ParticleDefinition* particle = GetParticleIterator()->value();
     G4ProcessManager* pmanager = particle->GetProcessManager();
     G4String particleName = particle->GetParticleName();
 
diff -r 659f02f409ac cmake/Modules/EnvCompilationFlags.cmake
--- a/cmake/Modules/EnvCompilationFlags.cmake	Sun Dec 17 16:54:21 2017 +0800
+++ b/cmake/Modules/EnvCompilationFlags.cmake	Mon Feb 19 17:27:19 2018 +0000
@@ -25,7 +25,7 @@
       #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
       #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++0x")
      # set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")   #needed for numpyserver- on Linux ?
-     set(CMAKE_CXX_STANDARD 14)
+     set(CMAKE_CXX_STANDARD 11)
      set(CMAKE_CXX_STANDARD_REQUIRED on)
 
   endif ()
diff -r 659f02f409ac externals/xercesc.bash
--- a/externals/xercesc.bash	Sun Dec 17 16:54:21 2017 +0800
+++ b/externals/xercesc.bash	Mon Feb 19 17:27:19 2018 +0000
@@ -118,7 +118,11 @@
 }
 
 xercesc-prefix(){  
-    echo $(opticks-prefix)/externals
+  if [ -n "$XERCESC_ROOT_DIR" ]; then
+      echo "$XERCESC_ROOT_DIR"
+  else
+      echo $(opticks-prefix)/externals
+  fi
 }
 
 
@@ -130,7 +134,9 @@
 
 xercesc-library(){  
 
-  if [ "$NODE_TAG" == "MGB" ]; then
+  if [ -n "$XERCESC_LIBRARY" ]; then
+      echo "$XERCESC_LIBRARY"
+  elif [ "$NODE_TAG" == "MGB" ]; then
       ome-
       ome-xercesc-lib
   elif [ "$NODE_TAG" == "X" ]; then
@@ -145,7 +151,9 @@
 }
 
 xercesc-include-dir(){ 
-  if [ "$NODE_TAG" == "MGB" ]; then
+  if [ -n "$XERCESC_INCLUDE_DIR" ]; then
+      echo "$XERCESC_INCLUDE_DIR"
+  elif [ "$NODE_TAG" == "MGB" ]; then
       ome-
       ome-xercesc-include
   else
diff -r 659f02f409ac opticks.bash
--- a/opticks.bash	Sun Dec 17 16:54:21 2017 +0800
+++ b/opticks.bash	Mon Feb 19 17:27:19 2018 +0000
@@ -375,7 +375,7 @@
 } 
 
 
-opticks-compute-capability(){ echo ${OPTICKS_COMPUTE_CAPABILITY:$($FUNCNAME-)} ; }
+opticks-compute-capability(){ echo ${OPTICKS_COMPUTE_CAPABILITY:-$($FUNCNAME-)} ; }
 opticks-compute-capability-()
 {
     local t=$NODE_TAG
